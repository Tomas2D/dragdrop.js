{"version":3,"sources":["../src/dragdrop.js"],"names":["Dragdrop","elements","getElements","params","treatParams","targets","document","querySelectorAll","element","orders","onInit","forEach","call","target","childNodes","length","child","tagName","elementId","getAttribute","order","parseInt","push","Object","assign","mergeElements","event","childs","parentId","dataTransfer","getData","$parent","getElementById","appendChild","el","classList","contains","add","remove","targetPosition","getTargetPosition","id","parentPosition","i","console","log","targetId","split","index","setAttribute","drop","dragover","dragleave","dragend","dragstart","self","addEventListener","parent","parentNode","opacityOn","setData","reOrder","opacityOff","changePosition","getOrders","preventDefault","dispatchEventsTarget","dispatchEventsElements"],"mappings":"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","file":"dragdrop.js","sourcesContent":["/**\r\n * Dragdrop.js\r\n * @author Guilherme Modugno - https://modugno.github.io \r\n * @description DragDrop Elements\r\n */\r\nclass Dragdrop {\r\n\r\n    constructor(...params) {\r\n        this.elements = this.getElements();\r\n        this.treatParams(params);\r\n        this.targets  = document.querySelectorAll(this.elements.targets);\r\n        this.elements = document.querySelectorAll(this.elements.element);\r\n        this.orders = [];\r\n        this.onInit();\r\n    }\r\n\r\n    /**\r\n     * Get Elements Mock\r\n     */\r\n    getElements() {\r\n        return {\r\n            element: '.dragdrop',\r\n            targets: '.dragdrop-target'\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Build and Get the order of elements \r\n     */\r\n    getOrders() {\r\n        this.orders = [];\r\n        [].forEach.call(this.targets, (target) => {\r\n            if (target.childNodes.length) {  \r\n                target.childNodes.forEach(child => {\r\n                    if (child.tagName) {\r\n                        let elementId = child.getAttribute('data-id') || 0\r\n                        let order     = parseInt( target.getAttribute('dragdrop-order') );\r\n                        this.orders.push({ elementId: elementId, order: order })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Merge elements\r\n     * @param {Object} elements \r\n     */\r\n    mergeElements(elements) {\r\n        Object.assign(this.elements, elements);\r\n    }\r\n\r\n    /**\r\n     * Treat the params of constructor\r\n     * @param {Array} params \r\n     */\r\n    treatParams(params) {\r\n        if (params.length == 1) {\r\n            if (typeof params[0] === 'object') {\r\n                this.mergeElements(params[0]);\r\n            } else if (typeof params[0] === 'function') {\r\n                params[0](document, this);\r\n            }\r\n        } \r\n        else if ((params.length > 1) && (typeof params[0] == 'object')) {\r\n            this.mergeElements(params[0]);\r\n            params[1](document, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change position of elements\r\n     * @param {Event} event \r\n     * @param {NodeList|HTMLElement} childs \r\n     */\r\n    changePosition(event, childs) {\r\n        if (childs.length) {\r\n            let parentId = event.dataTransfer.getData('parent');\r\n            let $parent = document.getElementById(parentId);\r\n            \r\n            childs.forEach(child => {\r\n                if (child.tagName) {\r\n                    $parent.appendChild(child);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove Opacity in all elements\r\n     */\r\n    opacityOn(element) {\r\n        [].forEach.call(this.elements, (el) => {\r\n            if ((el != element) && (!el.classList.contains('out'))) {\r\n                el.classList.add('out');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add Opacity in all elements\r\n     */\r\n    opacityOff() {\r\n        [].forEach.call(this.elements, (el) => {\r\n            if (el.classList.contains('out')) {\r\n                el.classList.remove('out');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Re Order elements on grid\r\n     * @param {NodeList|HTMLElement} target \r\n     */\r\n    reOrder(target) {\r\n        let parentId       = event.dataTransfer.getData('parent');\r\n        let targetPosition = this.getTargetPosition(target.id);\r\n        let parentPosition = this.getTargetPosition(parentId);\r\n\r\n        if (targetPosition > parentPosition) {\r\n            for (let i = parentPosition; i < targetPosition; i++) {\r\n                console.log( this.targets[i] );\r\n            }\r\n        } else {\r\n            for (let i = parentPosition; i > targetPosition; i--) {\r\n                console.log( this.targets[i-1] );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get Target Position\r\n     * @param {String} targetId \r\n     */\r\n    getTargetPosition(targetId) {\r\n        return targetId.split('-')[2];\r\n    }\r\n    \r\n    /**\r\n     * Dispatch events of targets\r\n     */\r\n    dispatchEventsTarget() {\r\n        let index = 1;\r\n        [].forEach.call(this.targets, (target) => {\r\n            target.setAttribute('dragdrop', 'target');\r\n            target.setAttribute('dragdrop-order', index);\r\n            target.id = `dragdrop-target-${index}`;\r\n            \r\n            this.drop(target);\r\n            this.dragover(target);\r\n            this.dragleave(target);\r\n            this.dragend(target);\r\n\r\n            index++;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Dispatch events of elements\r\n     */\r\n    dispatchEventsElements() {\r\n        let index = 1;\r\n        [].forEach.call(this.elements, (element) => {\r\n            element.setAttribute('dragdrop', 'element');\r\n            element.setAttribute('draggable', 'true');\r\n            element.id = `dragdrop-${index}`;\r\n\r\n            this.dragstart(element);\r\n\r\n            index++;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When event Dragstart is called\r\n     * @param {NodeList|HTMLElement} element \r\n     */\r\n    dragstart(element) {\r\n        let self = this;\r\n        element.addEventListener('dragstart', function(event) {\r\n            let parent = this.parentNode;\r\n            self.opacityOn(this);\r\n            event.dataTransfer.setData('parent', parent.id);\r\n            event.dataTransfer.setData('text/plain', this.id);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When event Drop is called\r\n     * @param {NodeList|HTMLElement} target \r\n     */\r\n    drop(target) {\r\n        let self = this;\r\n        target.addEventListener('drop', function(event) {\r\n            let id = event.dataTransfer.getData('text');\r\n            let el = document.getElementById(id);\r\n            \r\n            self.reOrder(this);\r\n            self.opacityOff();\r\n\r\n            self.changePosition(event, this.childNodes);\r\n            this.appendChild(el);\r\n    \r\n            if (!this.classList.contains('over')) {\r\n                this.classList.add('over');\r\n            }\r\n            \r\n            self.getOrders();\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * When event Dragover is called\r\n     * @param {NodeList|HTMLElement} target \r\n     */\r\n    dragover(target) {\r\n        target.addEventListener('dragover', function(event) {\r\n            event.preventDefault();\r\n            if (!this.classList.contains('over')) {\r\n                this.classList.add('over');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When event Dragleave is called\r\n     * @param {NodeList|HTMLElement} target \r\n     */\r\n    dragleave(target) {\r\n        target.addEventListener('dragleave', function(event) {\r\n            if (this.classList.contains('over')) {\r\n                this.classList.remove('over');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When event Dragend is called\r\n     * @param {NodeList|HTMLElement} target \r\n     */\r\n    dragend(target) {\r\n        target.addEventListener('dragend', function(event) {\r\n            if (this.classList.contains('over')) {\r\n                this.classList.remove('over');\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * On Init\r\n     */\r\n    onInit() {\r\n        this.dispatchEventsTarget();\r\n        this.dispatchEventsElements();\r\n        this.getOrders();\r\n    }\r\n    \r\n}\r\n"]}